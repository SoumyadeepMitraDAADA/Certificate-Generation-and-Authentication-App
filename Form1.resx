<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>